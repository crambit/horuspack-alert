; -*- mode: clojure; -*-
; vim: filetype=clojure

(ns horus.alert.config.main
  "Alert definition."
  (:require [riemann.common :refer [event-to-json]]
            [taoensso.carmine :as car]
            [clojure.string :as cstr]
            [horus.tslog.config.main :refer [save-alert]]))

(defmacro ^:private wcar* [& body] `(car/wcar {:pool {} :spec {:uri "{{&redis_url}}"}} ~@body))

(def ^:const prefix "hobs-alert:")

(defn- publish
  "Publish event to the Redis queue."
  [queue event]
  (try
    (wcar* (car/lpush queue (event-to-json event)))
    (catch Exception e
      (prn (str "RedisError -> " e)))))


(defn- alert-severe
  "The most urgent alerting level, often escalated to a page to urgently request human attention."
  [event]
  (publish (cstr/join [prefix "severe"]) event))

(defn- alert-moderate
  "Alerting urgency level for issues that do require intervention, but not right away."
  [event]
  (publish (cstr/join [prefix "moderate"]) event))

(defn- alert-minor
  "Low-urgency alert that is recorded in your monitoring system for future reference or investigation but does not interrupt anyoneâ€™s work."
  [event]
  (publish (cstr/join [prefix "minor"]) event))

(defn- alert-tips
  "Some pointers on how to go about a currently observed situation."
  [event]
  (publish (cstr/join [prefix "tips"]) event))


(defn alert
  "Not all alerts carry the same degree of urgency. Some require
  immediate human intervention, some require eventual human
  intervention, and some point to areas where attention may be
  needed in the future. All alerts should, at a minimum, be logged to
  a central location for easy correlation with other metrics and events.

  4 levels of alerting urgency are available by default:

  - tips
  - minor
  - moderate
  - severe

  Expect other packages to make use of these levels."

  [& {:keys [level]}]
  (fn [event]
    (assert (:collection event))
    (save-alert event)
    (cond
      (= level "severe")
        (alert-severe event)
      (= level "moderate")
        (alert-moderate event)
      (= level "minor")
        (alert-minor event)
      :else
        (alert-tips event))))
